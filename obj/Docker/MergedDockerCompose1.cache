networks:
  esnet: {}
services:
  elasticsearch:
    environment:
      discovery.type: single-node
      node.name: elastic_node01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.2
    networks:
      esnet: {}
    ports:
    - published: 9200
      target: 9200
  eventbuyingmicroservices.api:
    build:
      context: D:\@Infnet\projeto_bloco\projeto_bloco_III
      dockerfile: EventBuyingMicroservices.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: EventBuyingMicroservices.API
      target: base
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: eventbuyingmicroservicesapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "bin/Debug/netcoreapp2.2/EventBuyingMicroservices.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      esnet: {}
    ports:
    - published: 8084
      target: 80
    - target: 80
    tty: true
    volumes:
    - D:\@Infnet\projeto_bloco\projeto_bloco_III\EventBuyingMicroservices.API:/app:rw
    - C:\Users\Alessandra\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\Alessandra\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Alessandra\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\Alessandra\.nuget\packages:/root/.nuget/packages:ro
    - D:\@Infnet\projeto_bloco\projeto_bloco_III:/src:rw
  eventslist.web:
    build:
      context: D:\@Infnet\projeto_bloco\projeto_bloco_III
      dockerfile: EventsList.Web/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: EventsList.Web
      target: base
    depends_on:
    - elasticsearch
    - eventbuyingmicroservices.api
    - eventslistmicroservices.api
    - eventsticketsmicroservices.api
    - logger.api
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: eventslistweb:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "bin/Debug/netcoreapp2.2/EventsList.Web.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      esnet: {}
    ports:
    - published: 8081
      target: 80
    - target: 80
    tty: true
    volumes:
    - D:\@Infnet\projeto_bloco\projeto_bloco_III\EventsList.Web:/app:rw
    - C:\Users\Alessandra\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\Alessandra\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Alessandra\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\Alessandra\.nuget\packages:/root/.nuget/packages:ro
    - D:\@Infnet\projeto_bloco\projeto_bloco_III:/src:rw
  eventslistmicroservices.api:
    build:
      context: D:\@Infnet\projeto_bloco\projeto_bloco_III
      dockerfile: EventsListMicroservices.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: EventsListMicroservices.API
      target: base
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: eventslistmicroservicesapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "bin/Debug/netcoreapp2.2/EventsListMicroservices.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      esnet: {}
    ports:
    - published: 8083
      target: 80
    - target: 80
    tty: true
    volumes:
    - D:\@Infnet\projeto_bloco\projeto_bloco_III\EventsListMicroservices.API:/app:rw
    - C:\Users\Alessandra\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\Alessandra\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Alessandra\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\Alessandra\.nuget\packages:/root/.nuget/packages:ro
    - D:\@Infnet\projeto_bloco\projeto_bloco_III:/src:rw
  eventsticketsmicroservices.api:
    build:
      context: D:\@Infnet\projeto_bloco\projeto_bloco_III
      dockerfile: EventsTicketsMicroservices.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: EventsTicketsMicroservices.API
      target: base
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: eventsticketsmicroservicesapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "bin/Debug/netcoreapp2.2/EventsTicketsMicroservices.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      esnet: {}
    ports:
    - published: 8082
      target: 80
    - target: 80
    tty: true
    volumes:
    - D:\@Infnet\projeto_bloco\projeto_bloco_III\EventsTicketsMicroservices.API:/app:rw
    - C:\Users\Alessandra\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\Alessandra\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Alessandra\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\Alessandra\.nuget\packages:/root/.nuget/packages:ro
    - D:\@Infnet\projeto_bloco\projeto_bloco_III:/src:rw
  kibana:
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    image: docker.elastic.co/kibana/kibana:7.3.2
    networks:
      esnet: {}
    ports:
    - published: 5601
      target: 5601
  logger.api:
    build:
      context: D:\@Infnet\projeto_bloco\projeto_bloco_III
      dockerfile: Logger.Api/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Logger.Api
      target: base
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: loggerapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "bin/Debug/netcoreapp2.2/Logger.Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      esnet: {}
    ports:
    - published: 8085
      target: 80
    - target: 80
    tty: true
    volumes:
    - D:\@Infnet\projeto_bloco\projeto_bloco_III\Logger.Api:/app:rw
    - C:\Users\Alessandra\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\Alessandra\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\Alessandra\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\Alessandra\.nuget\packages:/root/.nuget/packages:ro
    - D:\@Infnet\projeto_bloco\projeto_bloco_III:/src:rw
  rabbitmq1:
    container_name: rabbitmq1
    hostname: rabbitmq1
    image: rabbitmq:3-management
    networks:
      esnet: {}
    ports:
    - published: 15672
      target: 5672
    - published: 6672
      target: 6672
    - published: 8086
      target: 15672
    volumes:
    - /storage/rabbitmq1:/var/lib/rabbitmq:rw
  redis:
    command: redis-server --requirepass Redis2019!
    image: redis
    networks:
      esnet: {}
    ports:
    - published: 8087
      target: 6379
version: '3.4'